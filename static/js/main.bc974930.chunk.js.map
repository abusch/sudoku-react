{"version":3,"sources":["selectionSlice.js","sudokuSlice.js","components/cell.js","components/block.js","components/board.js","App.js","store.js","index.js"],"names":["selectionSlice","createSlice","name","initialState","row","column","reducers","moveRight","state","moveLeft","moveUp","moveDown","actions","sudokuSlice","map","digit","value","locked","pencilMarks","Set","setDigit","action","payload","cell","setPencilMark","has","delete","add","Cell","props","displayValue","classes","selectedClass","Array","from","sort","join","push","className","Block","selection","useSelector","data","sudoku","blockX","x","blockY","y","cells","selectedBlockX","Math","floor","selectedBlockY","j","i","key","Board","renderBlock","App","dispatch","useDispatch","digitKeyToDigit","code","useEffect","handleKeyDown","event","shiftKey","window","addEventListener","removeEventListener","href","configureStore","reducer","selectionReducer","sudokuReducer","enableMapSet","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.bc974930.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const selectionSlice = createSlice({\n  name: 'selection',\n  initialState: {\n    row: 0,\n    column: 0,\n  },\n  reducers: {\n    moveRight: state => {\n      state.column = (state.column === 8) ? 0 : (state.column + 1);\n    },\n    moveLeft: state => {\n      state.column = (state.column === 0) ? 8 : (state.column - 1);\n    },\n    moveUp: state => {\n      state.row = (state.row === 0) ? 8 : (state.row - 1);\n    },\n    moveDown: state => {\n      state.row = (state.row === 8) ? 0 : (state.row + 1);\n    },\n  }\n});\n\nexport const { moveRight, moveLeft, moveUp, moveDown } = selectionSlice.actions;\n\nexport default selectionSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialData = [\n  0, 0, 1, 2, 0, 3, 4, 0, 0,\n  0, 0, 0, 6, 0, 7, 0, 0, 0,\n  5, 0, 0, 0, 0, 0, 0, 0, 3,\n  3, 7, 0, 0, 0, 0, 0, 8, 1,\n  0, 0, 0, 0, 0, 0, 0, 0, 0,\n  6, 2, 0, 0, 0, 0, 0, 3, 7,\n  1, 0, 0, 0, 0, 0, 0, 0, 8,\n  0, 0, 0, 8, 0, 5, 0, 0, 0,\n  0, 0, 6, 4, 0, 2, 5, 0, 0];\n\nconst digitToCell = (digit) => ({\n  value: digit,\n  locked: (digit !== 0),\n  pencilMarks: new Set(),\n});\n\nexport const sudokuSlice = createSlice({\n  name: 'sudoku',\n  initialState: initialData.map(digitToCell),\n  reducers: {\n    setDigit: (state, action) => {\n      const { row, column, digit } = action.payload;\n      const cell = state[row * 9 + column];\n      if (!cell.locked) {\n        cell.value = digit;\n      }\n    },\n    setPencilMark: (state, action) => {\n      const { row, column, digit } = action.payload;\n      const cell = state[row * 9 + column];\n      if (!cell.locked) {\n        if (cell.pencilMarks.has( digit )) {\n          cell.pencilMarks.delete( digit );\n        } else {\n          cell.pencilMarks.add( digit );\n        } \n      }\n    }\n  }\n});\n\nexport const {setDigit, setPencilMark} = sudokuSlice.actions;\nexport default sudokuSlice.reducer;\n","export const Cell = (props) => {\n  const classes = [\"cell\", props.selectedClass];\n  const pencilMarks = Array.from(props.value.pencilMarks).sort().join(' ');\n\n  if (props.value.locked) {\n    classes.push(\"locked\");\n  }\n\n  let displayValue;\n  if (props.value.value === 0) {\n    displayValue = pencilMarks;\n    classes.push(\"pencilMark\");\n  } else {\n    displayValue = props.value.value;\n  }\n\n  return <div className={classes.join(' ')}>\n    {displayValue}\n  </div>;\n}\n","import { useSelector } from 'react-redux';\nimport { Cell } from './cell';\n\nexport const Block = (props) => {\n  const selection = useSelector(state => state.selection);\n  const data = useSelector(state => state.sudoku);\n\n  const blockX = props.x;\n  const blockY = props.y;\n\n  const cells = [];\n  const { row, column } = selection;\n  const selectedBlockX = Math.floor(column / 3);\n  const selectedBlockY = Math.floor(row / 3);\n\n  for (let j = 0; j < 3; j++) {\n    const y = blockY * 3 + j;\n    for (let i = 0; i < 3; i++) {\n      const x = blockX * 3 + i;\n      let selectedClass;\n      if (x === column && y === row) {\n        selectedClass = \"selectedCell\";\n      } else if (x === column) {\n        selectedClass = \"selectedColumn\";\n      } else if (y === row) {\n        selectedClass = \"selectedRow\";\n      } else if (blockX === selectedBlockX && blockY === selectedBlockY) {\n        selectedClass = \"selectedBlock\";\n      } else {\n        selectedClass = \"\";\n      }\n      // Generate an appropriate key to make sure a cell is only rerendered when needed:\n      const key = x + \",\" + y + \",\" + selectedClass;\n      cells.push(<Cell key={key} value={data[y * 9 + x]} selectedClass={selectedClass} />);\n    }\n  }\n\n  return <div className=\"block\">\n    {cells}\n  </div>\n}\n","import { Block } from './block';\n\nexport const Board = () => {\n  const renderBlock = (x, y) => {\n    return <Block x={x} y={y} />;\n  };\n\n  return <div className=\"board\">\n    {renderBlock(0, 0)}\n    {renderBlock(1, 0)}\n    {renderBlock(2, 0)}\n    {renderBlock(0, 1)}\n    {renderBlock(1, 1)}\n    {renderBlock(2, 1)}\n    {renderBlock(0, 2)}\n    {renderBlock(1, 2)}\n    {renderBlock(2, 2)}\n  </div>;\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { moveRight, moveLeft, moveUp, moveDown } from './selectionSlice';\nimport { setDigit, setPencilMark } from './sudokuSlice';\nimport { Board } from './components/board';\nimport './App.css';\n\nconst App = () => {\n  const selection = useSelector(state => state.selection);\n  const dispatch = useDispatch();\n\n  const digitKeyToDigit = (code) => {\n    switch (code) {\n      case \"Digit1\": return 1;\n      case \"Digit2\": return 2;\n      case \"Digit3\": return 3;\n      case \"Digit4\": return 4;\n      case \"Digit5\": return 5;\n      case \"Digit6\": return 6;\n      case \"Digit7\": return 7;\n      case \"Digit8\": return 8;\n      case \"Digit9\": return 9;\n      default: return undefined;\n    }\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      let x = selection.column;\n      let y = selection.row;\n\n      if (event.key === 'j' || event.key === 'ArrowDown') {\n        dispatch(moveDown());\n      } else if (event.key === 'k' || event.key === 'ArrowUp') {\n        dispatch(moveUp());\n      } else if (event.key === 'h' || event.key === 'ArrowLeft') {\n        dispatch(moveLeft());\n      } else if (event.key === 'l' || event.key === 'ArrowRight') {\n        dispatch(moveRight());\n      } else if (digitKeyToDigit(event.code)) {\n        const payload = {\n          column: x,\n          row: y,\n          digit: digitKeyToDigit(event.code),\n        };\n        if (event.shiftKey) {\n          dispatch(setPencilMark(payload));\n        } else {\n          dispatch(setDigit(payload));\n        }\n      } else if (event.key === 'Backspace') {\n        const payload = {\n          column: x,\n          row: y,\n          digit: 0,\n        };\n        dispatch(setDigit(payload));\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dispatch, selection]);\n\n\n  return (\n    <div className=\"content\">\n      <h1>SUDOKU</h1>\n      <Board />\n      <footer>\n        <div>&copy; Copyright 2021, Antoine Busch</div>\n        <div>Colours by <a href=\"https://www.nordtheme.com/\">Nord Theme</a></div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport selectionReducer from './selectionSlice';\nimport sudokuReducer from './sudokuSlice';\n\nexport default configureStore({\n  reducer: {\n    selection: selectionReducer,\n    sudoku: sudokuReducer,\n  }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport {enableMapSet} from \"immer\"\n\n// Enable Map and Set support for immer\nenableMapSet()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}