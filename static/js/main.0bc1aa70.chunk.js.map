{"version":3,"sources":["selectionSlice.js","sudokuSlice.js","sudoku.js","components/cell.js","components/block.js","components/board.js","components/controls.js","App.js","store.js","index.js"],"names":["selectionSlice","createSlice","name","initialState","row","column","reducers","moveRight","state","moveLeft","moveUp","moveDown","actions","sudokuSlice","map","digit","value","locked","valid","pencilMarks","Set","setDigit","action","payload","cell","clear","setPencilMark","has","delete","add","verify","forEach","index","Math","floor","col","cells","cellIdx","block_row","block_col","i","sameColIdx","sameRowIdx","sameBlockIdx","sameCol","sameRow","sameBlock","checkCellObjectValid","restart","Cell","props","displayValue","classes","selectedClass","Array","from","sort","join","push","className","Block","selection","useSelector","data","sudoku","blockX","x","blockY","y","selectedBlockX","selectedBlockY","j","key","Board","renderBlock","Controls","dispatch","useDispatch","id","onClick","App","digitKeyToDigit","code","useEffect","handleKeyDown","event","shiftKey","window","addEventListener","removeEventListener","href","configureStore","reducer","selectionReducer","sudokuReducer","enableMapSet","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.0bc1aa70.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const selectionSlice = createSlice({\n  name: 'selection',\n  initialState: {\n    row: 0,\n    column: 0,\n  },\n  reducers: {\n    moveRight: state => {\n      state.column = (state.column === 8) ? 0 : (state.column + 1);\n    },\n    moveLeft: state => {\n      state.column = (state.column === 0) ? 8 : (state.column - 1);\n    },\n    moveUp: state => {\n      state.row = (state.row === 0) ? 8 : (state.row - 1);\n    },\n    moveDown: state => {\n      state.row = (state.row === 8) ? 0 : (state.row + 1);\n    },\n  }\n});\n\nexport const { moveRight, moveLeft, moveUp, moveDown } = selectionSlice.actions;\n\nexport default selectionSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { checkCellObjectValid } from './sudoku';\n\nconst initialData = [\n  0, 0, 1, 2, 0, 3, 4, 0, 0,\n  0, 0, 0, 6, 0, 7, 0, 0, 0,\n  5, 0, 0, 0, 0, 0, 0, 0, 3,\n  3, 7, 0, 0, 0, 0, 0, 8, 1,\n  0, 0, 0, 0, 0, 0, 0, 0, 0,\n  6, 2, 0, 0, 0, 0, 0, 3, 7,\n  1, 0, 0, 0, 0, 0, 0, 0, 8,\n  0, 0, 0, 8, 0, 5, 0, 0, 0,\n  0, 0, 6, 4, 0, 2, 5, 0, 0];\n\nconst digitToCell = (digit) => ({\n  value: digit,\n  locked: (digit !== 0),\n  valid: true,\n  pencilMarks: new Set(),\n});\n\nexport const sudokuSlice = createSlice({\n  name: 'sudoku',\n  initialState: initialData.map(digitToCell),\n  reducers: {\n    setDigit: (state, action) => {\n      const { row, column, digit } = action.payload;\n      const cell = state[row * 9 + column];\n      if (!cell.locked) {\n        cell.value = digit;\n        cell.pencilMarks.clear();\n      }\n    },\n    setPencilMark: (state, action) => {\n      const { row, column, digit } = action.payload;\n      const cell = state[row * 9 + column];\n      if (!cell.locked) {\n        if (cell.pencilMarks.has( digit )) {\n          cell.pencilMarks.delete( digit );\n        } else {\n          cell.pencilMarks.add( digit );\n          cell.value = 0;\n        } \n      }\n    },\n    verify: (state) => {\n      state.forEach((cell, index) => {\n        const row = Math.floor(index / 9);\n        const col = index % 9;\n        if (!cell.locked) {\n          cell.valid = checkCellObjectValid(state, row, col, cell.value);\n        }\n      });\n    },\n    restart: (state) => {\n      state.forEach((cell) => {\n        if (!cell.locked) {\n          cell.value = 0;\n          cell.pencilMarks.clear();\n          cell.valid = true;\n        }\n      });\n    }\n  }\n});\n\nexport const {setDigit, setPencilMark, verify, restart} = sudokuSlice.actions;\nexport default sudokuSlice.reducer;\n","// Recursively attempts to solve this sudoku\nfunction solveSudoku(cells) {\n  let cell_idx = findEmptyCell(cells);\n  if (cell_idx === -1) {\n    // No more empty cells, we've solved the sudoku\n    return true;\n  }\n\n  for (let i = 1; i <= 9; i++) {\n    if (checkCellValid(cells, cell_idx, i)) {\n      cells[cell_idx] = i;\n      if (solveSudoku(cells)) {\n        return true;\n      } else {\n        // That digit didn't work out, try the next one\n        cells[cell_idx] = 0;\n      }\n    }\n  }\n\n  // If we tried all the digits for that cell and couldn't solve the sudoku,\n  // then we've failed\n  return false;\n}\n\nfunction checkCellValid(cells, cell_idx, digit) {\n  const row = Math.floor(cell_idx / 9);\n  const col = cell_idx % 9;\n  // top-left coordinates of the 3x3 block that contains the cell\n  const block_row = Math.floor(row / 3) * 3;\n  const block_col = Math.floor(col / 3) * 3;\n\n  for (let i = 0; i < 9; i++) {\n    const row_offset = Math.floor(i / 3);\n    const column_offset = i % 3;\n    if (cells[row * 9 + i] === digit // check column\n      || cells[i * 9 + col] === digit  // check row\n      || cells[(block_row + row_offset) * 9 + (block_col + column_offset)] === digit // check block\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction checkCellObjectValid(cells, row, col, digit) {\n  if (digit === 0) {\n    return true;\n  }\n\n  // top-left coordinates of the 3x3 block that contains the cell\n  const cellIdx = row * 9 + col;\n  const block_row = Math.floor(row / 3) * 3;\n  const block_col = Math.floor(col / 3) * 3;\n\n  for (let i = 0; i < 9; i++) {\n    const row_offset = Math.floor(i / 3);\n    const column_offset = i % 3;\n    const sameColIdx = row * 9 + i;\n    const sameRowIdx = i * 9 + col;\n    const sameBlockIdx = (block_row + row_offset) * 9 + (block_col + column_offset);\n\n    const sameCol = cells[sameColIdx].value;\n    const sameRow = cells[sameRowIdx].value;\n    const sameBlock = cells[sameBlockIdx].value;\n\n    // Make sure we don't validate the current cell with itself\n    const invalidInCol = (sameColIdx === cellIdx) ? false : (sameCol === digit);\n    const invalidInRow = (sameRowIdx === cellIdx) ? false : (sameRow === digit);\n    const invalidInBlock = (sameBlockIdx === cellIdx) ? false : (sameBlock === digit);\n\n    if (invalidInCol || invalidInRow || invalidInBlock) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction findEmptyCell(cells) {\n  for (let i = 0; i < 81; i++) {\n    if (cells[i] === 0) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nexport {solveSudoku, checkCellObjectValid};\n","export const Cell = (props) => {\n  const classes = [\"cell\", props.selectedClass];\n  const pencilMarks = Array.from(props.value.pencilMarks).sort().join(' ');\n\n  if (props.value.locked) {\n    classes.push(\"locked\");\n  }\n  if (!props.value.valid) {\n    classes.push(\"invalid\");\n  }\n\n  let displayValue;\n  if (props.value.value === 0) {\n    displayValue = pencilMarks;\n    classes.push(\"pencilMark\");\n  } else {\n    displayValue = props.value.value;\n  }\n\n  return <div className={classes.join(' ')}>\n    {displayValue}\n  </div>;\n}\n","import { useSelector } from 'react-redux';\nimport { Cell } from './cell';\n\nexport const Block = (props) => {\n  const selection = useSelector(state => state.selection);\n  const data = useSelector(state => state.sudoku);\n\n  const blockX = props.x;\n  const blockY = props.y;\n\n  const cells = [];\n  const { row, column } = selection;\n  const selectedBlockX = Math.floor(column / 3);\n  const selectedBlockY = Math.floor(row / 3);\n\n  for (let j = 0; j < 3; j++) {\n    const y = blockY * 3 + j;\n    for (let i = 0; i < 3; i++) {\n      const x = blockX * 3 + i;\n      let selectedClass;\n      if (x === column && y === row) {\n        selectedClass = \"selectedCell\";\n      } else if (x === column) {\n        selectedClass = \"selectedColumn\";\n      } else if (y === row) {\n        selectedClass = \"selectedRow\";\n      } else if (blockX === selectedBlockX && blockY === selectedBlockY) {\n        selectedClass = \"selectedBlock\";\n      } else {\n        selectedClass = \"\";\n      }\n      // Generate an appropriate key to make sure a cell is only rerendered when needed:\n      const key = x + \",\" + y + \",\" + selectedClass;\n      cells.push(<Cell key={key} value={data[y * 9 + x]} selectedClass={selectedClass} />);\n    }\n  }\n\n  return <div className=\"block\">\n    {cells}\n  </div>\n}\n","import { Block } from './block';\n\nexport const Board = () => {\n  const renderBlock = (x, y) => {\n    return <Block x={x} y={y} />;\n  };\n\n  return <div className=\"board\">\n    {renderBlock(0, 0)}\n    {renderBlock(1, 0)}\n    {renderBlock(2, 0)}\n    {renderBlock(0, 1)}\n    {renderBlock(1, 1)}\n    {renderBlock(2, 1)}\n    {renderBlock(0, 2)}\n    {renderBlock(1, 2)}\n    {renderBlock(2, 2)}\n  </div>;\n}\n","import { useDispatch } from 'react-redux';\nimport {verify, restart} from '../sudokuSlice';\n\nexport const Controls = (props) => {\n  const dispatch = useDispatch();\n\n  return <div className=\"controls\">\n    <button id=\"verify\" onClick={() => dispatch(verify())}>Verify</button>\n    <button id=\"restart\" onClick={() => dispatch(restart())}>Restart</button>\n    </div>\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { moveRight, moveLeft, moveUp, moveDown } from './selectionSlice';\nimport { setDigit, setPencilMark } from './sudokuSlice';\nimport { Board } from './components/board';\nimport { Controls } from './components/controls';\nimport './App.css';\n\nconst App = () => {\n  const selection = useSelector(state => state.selection);\n  const dispatch = useDispatch();\n\n  const digitKeyToDigit = (code) => {\n    switch (code) {\n      case \"Digit1\": return 1;\n      case \"Digit2\": return 2;\n      case \"Digit3\": return 3;\n      case \"Digit4\": return 4;\n      case \"Digit5\": return 5;\n      case \"Digit6\": return 6;\n      case \"Digit7\": return 7;\n      case \"Digit8\": return 8;\n      case \"Digit9\": return 9;\n      default: return undefined;\n    }\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      let x = selection.column;\n      let y = selection.row;\n\n      if (event.key === 'j' || event.key === 'ArrowDown') {\n        dispatch(moveDown());\n      } else if (event.key === 'k' || event.key === 'ArrowUp') {\n        dispatch(moveUp());\n      } else if (event.key === 'h' || event.key === 'ArrowLeft') {\n        dispatch(moveLeft());\n      } else if (event.key === 'l' || event.key === 'ArrowRight') {\n        dispatch(moveRight());\n      } else if (digitKeyToDigit(event.code)) {\n        const payload = {\n          column: x,\n          row: y,\n          digit: digitKeyToDigit(event.code),\n        };\n        if (event.shiftKey) {\n          dispatch(setPencilMark(payload));\n        } else {\n          dispatch(setDigit(payload));\n        }\n      } else if (event.key === 'Backspace') {\n        const payload = {\n          column: x,\n          row: y,\n          digit: 0,\n        };\n        dispatch(setDigit(payload));\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dispatch, selection]);\n\n\n  return (\n    <div className=\"content\">\n      <h1>SUDOKU</h1>\n      <Board />\n      <Controls />\n      <footer>\n        <div>&copy; Copyright 2021, Antoine Busch</div>\n        <div>Colours by <a href=\"https://www.nordtheme.com/\">Nord Theme</a></div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport selectionReducer from './selectionSlice';\nimport sudokuReducer from './sudokuSlice';\n\nexport default configureStore({\n  reducer: {\n    selection: selectionReducer,\n    sudoku: sudokuReducer,\n  }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport {enableMapSet} from \"immer\"\n\n// Enable Map and Set support for immer\nenableMapSet()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}